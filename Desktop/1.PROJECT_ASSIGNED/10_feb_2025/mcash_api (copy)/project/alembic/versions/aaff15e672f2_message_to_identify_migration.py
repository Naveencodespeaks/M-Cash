"""message to identify migration

Revision ID: aaff15e672f2
Revises: 
Create Date: 2025-02-06 11:39:55.008582

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'aaff15e672f2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agent_kyc_detais',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('agent_id', sa.Integer(), nullable=True),
    sa.Column('street', sa.Text(), nullable=True),
    sa.Column('city', sa.Text(), nullable=True),
    sa.Column('state_id', sa.Integer(), nullable=True),
    sa.Column('state', sa.Text(), nullable=True),
    sa.Column('pincode', sa.String(length=50), nullable=True),
    sa.Column('annual_income', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('coupons',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('coupon_code', sa.String(length=10), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('coupon_amount', sa.Float(), nullable=True),
    sa.Column('currency', sa.String(length=4), nullable=True),
    sa.Column('discount_type', sa.String(length=61), nullable=True, comment="'FIXED_AMOUNT' or 'PERCENTAGE'"),
    sa.Column('coupon_expiry_date', sa.DateTime(), nullable=True),
    sa.Column('usage_limit_per_person', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True, comment='1 active and 0 inactive'),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('coupon_code')
    )
    op.create_table('md_beneficiary_categoryes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_beneficiary_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_charge_categoryes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_countries',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('shortName', sa.String(length=100), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('phoneCode', sa.Integer(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('currencySymbol', sa.String(length=100), nullable=True),
    sa.Column('currencyCode', sa.String(length=100), nullable=True),
    sa.Column('zipcodeLength', sa.Integer(), nullable=True),
    sa.Column('allowNumAndCharInZipcode', sa.String(length=100), nullable=True),
    sa.Column('mapName', sa.String(length=100), nullable=True),
    sa.Column('currency_name', sa.String(length=100), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_currency_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_funds_request_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_kyc_docs_permissions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('md_doc_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_kyc_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_locations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('stateId', sa.Integer(), nullable=True),
    sa.Column('countryId', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_occupations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_otp_configarations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('beneficiary', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_reminder_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_service_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('charges', sa.Integer(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_states',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('mapName', sa.String(length=100), nullable=True),
    sa.Column('countryId', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_task_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_tenant_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_timezones',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('zone', sa.String(length=55), nullable=True),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_transaction_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_user_kyc_docs_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_user_roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_md_user_roles_name'), 'md_user_roles', ['name'], unique=False)
    op.create_table('md_user_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('merchant_kyc_detais',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('merchant_id', sa.Integer(), nullable=True),
    sa.Column('street', sa.Text(), nullable=True),
    sa.Column('city', sa.Text(), nullable=True),
    sa.Column('state_id', sa.Integer(), nullable=True),
    sa.Column('state', sa.Text(), nullable=True),
    sa.Column('pincode', sa.String(length=50), nullable=True),
    sa.Column('annual_income', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tenants',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=150), nullable=True),
    sa.Column('email', sa.String(length=161), nullable=False),
    sa.Column('mobile_no', sa.String(length=15), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tickets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('reference', sa.String(length=150), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tickets_user_id'), 'tickets', ['user_id'], unique=False)
    op.create_table('tokens',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ref_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('otp', sa.String(length=61), nullable=True),
    sa.Column('catrgory', sa.String(length=150), nullable=False),
    sa.Column('token', sa.Text(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction_purpose',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=700), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('flag', sa.Text(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction_sub_purpose',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=700), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('flag', sa.Text(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('admin',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_name', sa.String(length=61), nullable=True),
    sa.Column('password', sa.Text(), nullable=True),
    sa.Column('login_token', sa.Text(), nullable=True),
    sa.Column('token', sa.Text(), nullable=True),
    sa.Column('email', sa.String(length=161), nullable=True),
    sa.Column('mobile_no', sa.String(length=15), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_admin_tenant_id'), 'admin', ['tenant_id'], unique=False)
    op.create_table('agents',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_name', sa.String(length=61), nullable=True),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('name', sa.String(length=150), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('password', sa.Text(), nullable=True),
    sa.Column('login_token', sa.Text(), nullable=True),
    sa.Column('token', sa.Text(), nullable=True),
    sa.Column('email', sa.String(length=161), nullable=True),
    sa.Column('mobile_no', sa.String(length=15), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.Column('kyc_details_id', sa.Integer(), nullable=True),
    sa.Column('kyc_status_id', sa.Integer(), nullable=False),
    sa.Column('login_count', sa.Integer(), nullable=True, comment='User Login count'),
    sa.Column('login_fail_count', sa.Integer(), nullable=True, comment='User Login Fail count'),
    sa.Column('login_attempt_date', sa.DateTime(), nullable=True, comment='Last Login Attempt date'),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['kyc_details_id'], ['agent_kyc_detais.id'], ),
    sa.ForeignKeyConstraint(['kyc_status_id'], ['md_kyc_status.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agents_tenant_id'), 'agents', ['tenant_id'], unique=False)
    op.create_table('kyc_detais',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('street', sa.Text(), nullable=True),
    sa.Column('city', sa.Text(), nullable=True),
    sa.Column('state_id', sa.Integer(), nullable=True),
    sa.Column('state', sa.Text(), nullable=True),
    sa.Column('pincode', sa.String(length=50), nullable=True),
    sa.Column('annual_income', sa.Integer(), nullable=True),
    sa.Column('occupation_id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['occupation_id'], ['md_occupations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_currencies',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('iso_code', sa.String(length=50), nullable=True),
    sa.Column('currency_symbol', sa.String(length=50), nullable=True),
    sa.Column('default', sa.Boolean(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('subunits', sa.Integer(), nullable=False),
    sa.Column('currency_type_id', sa.Integer(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['currency_type_id'], ['md_currency_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_md_currencies_currency_type_id'), 'md_currencies', ['currency_type_id'], unique=False)
    op.create_table('md_kyc_docs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('required', sa.Boolean(), nullable=True),
    sa.Column('category', sa.String(length=25), nullable=True, comment='category should be USERS or AGENTS OR MERCHANTS'),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('users_list', sa.Text(), nullable=True),
    sa.Column('share_type', sa.String(length=25), nullable=True, comment='share_type should be SPECIFIC_USERS or UPCOMMING_USERS OR ALL_USERS'),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_md_kyc_docs_tenant_id'), 'md_kyc_docs', ['tenant_id'], unique=False)
    op.create_table('merchants',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_name', sa.String(length=61), nullable=True),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('name', sa.String(length=150), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('password', sa.Text(), nullable=True),
    sa.Column('login_token', sa.Text(), nullable=True),
    sa.Column('token', sa.Text(), nullable=True),
    sa.Column('email', sa.String(length=161), nullable=True),
    sa.Column('mobile_no', sa.String(length=15), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.Column('kyc_status_id', sa.Integer(), nullable=False),
    sa.Column('kyc_details_id', sa.Integer(), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=True, comment='User Login count'),
    sa.Column('login_fail_count', sa.Integer(), nullable=True, comment='User Login Fail count'),
    sa.Column('login_attempt_date', sa.DateTime(), nullable=True, comment='Last Login Attempt date'),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['kyc_details_id'], ['merchant_kyc_detais.id'], ),
    sa.ForeignKeyConstraint(['kyc_status_id'], ['md_kyc_status.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_merchants_tenant_id'), 'merchants', ['tenant_id'], unique=False)
    op.create_table('remittance_charges',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=25), nullable=True),
    sa.Column('md_category_id', sa.Integer(), nullable=False),
    sa.Column('apply_to', sa.String(length=25), nullable=True, comment='VALUES SHOULD BE DOMESTIC OR,INTERNATIONAL or SPECIFIC_USER'),
    sa.Column('minimum_transaction_amount', sa.Integer(), nullable=True),
    sa.Column('maximum_transaction_amount', sa.Integer(), nullable=True),
    sa.Column('users_list', sa.Text(), nullable=True),
    sa.Column('effective_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('charges', sa.Float(), nullable=True),
    sa.Column('admin_charges', sa.Float(), nullable=True),
    sa.Column('agent_charges', sa.Float(), nullable=True),
    sa.Column('calculate_in_percentage', sa.Boolean(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('from_role_id', sa.Integer(), nullable=False),
    sa.Column('to_role_id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['from_role_id'], ['md_user_roles.id'], ),
    sa.ForeignKeyConstraint(['md_category_id'], ['md_charge_categoryes.id'], ),
    sa.ForeignKeyConstraint(['to_role_id'], ['md_user_roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('agent_kyc_docs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('agent_id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('md_doc_id', sa.Integer(), nullable=False),
    sa.Column('md_doc_name', sa.String(length=150), nullable=True),
    sa.Column('md_doc_description', sa.String(length=150), nullable=True),
    sa.Column('md_doc_required', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(length=150), nullable=True),
    sa.Column('path', sa.String(length=750), nullable=True),
    sa.Column('content_type', sa.String(length=50), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['md_doc_id'], ['md_kyc_docs.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['md_user_kyc_docs_status.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('merchant_kyc_docs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('merchant_id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('md_doc_id', sa.Integer(), nullable=False),
    sa.Column('md_doc_name', sa.String(length=150), nullable=True),
    sa.Column('md_doc_description', sa.String(length=150), nullable=True),
    sa.Column('md_doc_required', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(length=150), nullable=True),
    sa.Column('path', sa.String(length=750), nullable=True),
    sa.Column('content_type', sa.String(length=50), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['md_doc_id'], ['md_kyc_docs.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['md_user_kyc_docs_status.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_kyc_docs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('md_doc_id', sa.Integer(), nullable=False),
    sa.Column('md_doc_name', sa.String(length=150), nullable=True),
    sa.Column('md_doc_description', sa.String(length=150), nullable=True),
    sa.Column('md_doc_required', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(length=150), nullable=True),
    sa.Column('path', sa.String(length=750), nullable=True),
    sa.Column('content_type', sa.String(length=50), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['md_doc_id'], ['md_kyc_docs.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['md_user_kyc_docs_status.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('name', sa.String(length=150), nullable=True),
    sa.Column('password', sa.Text(), nullable=True),
    sa.Column('token', sa.Text(), nullable=True),
    sa.Column('email', sa.String(length=161), nullable=False),
    sa.Column('mobile_no', sa.String(length=15), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=True, comment='User Login count'),
    sa.Column('login_fail_count', sa.Integer(), nullable=True, comment='User Login Fail count'),
    sa.Column('login_attempt_date', sa.DateTime(), nullable=True, comment='Last Login Attempt date'),
    sa.Column('otp', sa.String(length=61), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('kyc_details_id', sa.Integer(), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('state_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('kyc_status_id', sa.Integer(), nullable=False),
    sa.Column('accepted_terms', sa.Boolean(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['md_countries.id'], ),
    sa.ForeignKeyConstraint(['kyc_details_id'], ['kyc_detais.id'], ),
    sa.ForeignKeyConstraint(['kyc_status_id'], ['md_kyc_status.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['md_locations.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['md_user_roles.id'], ),
    sa.ForeignKeyConstraint(['state_id'], ['md_states.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['md_user_status.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_location_id'), 'users', ['location_id'], unique=False)
    op.create_index(op.f('ix_users_tenant_id'), 'users', ['tenant_id'], unique=False)
    op.create_table('admin_notificatuions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('admin_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('status_category', sa.String(length=50), nullable=True),
    sa.Column('ref_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['admin.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_admin_notificatuions_admin_id'), 'admin_notificatuions', ['admin_id'], unique=False)
    op.create_index(op.f('ix_admin_notificatuions_user_id'), 'admin_notificatuions', ['user_id'], unique=False)
    op.create_table('admin_wallets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('currency_id', sa.Integer(), nullable=True),
    sa.Column('balance', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('credited_by', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['admin.id'], ),
    sa.ForeignKeyConstraint(['credited_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['md_currencies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('agent_kyc_doc_comments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('agent_kyc_doc_id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('commented_by', sa.Integer(), nullable=False),
    sa.Column('commented_by_role_id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agent_kyc_doc_id'], ['agent_kyc_docs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bank_accounts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('number', sa.String(length=35), nullable=False),
    sa.Column('account_name', sa.String(length=35), nullable=False),
    sa.Column('bank_name', sa.String(length=35), nullable=True),
    sa.Column('cvv', sa.String(length=4), nullable=True),
    sa.Column('expiary_date', sa.String(length=35), nullable=True),
    sa.Column('category', sa.String(length=35), nullable=True),
    sa.Column('ifsc', sa.String(length=15), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('beneficiaries',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=50), nullable=True),
    sa.Column('nick_name', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=161), nullable=True),
    sa.Column('mobile_no', sa.String(length=15), nullable=True),
    sa.Column('beneficiary_category_id', sa.Integer(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('state_province', sa.String(length=50), nullable=True),
    sa.Column('postal_code', sa.String(length=50), nullable=True),
    sa.Column('swift_code', sa.String(length=20), nullable=True),
    sa.Column('iban', sa.String(length=20), nullable=True),
    sa.Column('bank_name', sa.String(length=50), nullable=True),
    sa.Column('routing_number', sa.String(length=20), nullable=True),
    sa.Column('use_routing_number', sa.Boolean(), nullable=True),
    sa.Column('bank_currency', sa.String(length=5), nullable=True),
    sa.Column('bank_country_id', sa.Integer(), nullable=False),
    sa.Column('bank_address', sa.String(length=1500), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['bank_country_id'], ['md_countries.id'], ),
    sa.ForeignKeyConstraint(['beneficiary_category_id'], ['md_beneficiary_categoryes.id'], ),
    sa.ForeignKeyConstraint(['country_id'], ['md_countries.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['md_beneficiary_status.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_beneficiaries_city'), 'beneficiaries', ['city'], unique=False)
    op.create_index(op.f('ix_beneficiaries_full_name'), 'beneficiaries', ['full_name'], unique=False)
    op.create_index(op.f('ix_beneficiaries_user_id'), 'beneficiaries', ['user_id'], unique=False)
    op.create_table('kyc_doc_comments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_doc_id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('commented_by', sa.Integer(), nullable=False),
    sa.Column('commented_by_role_id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_doc_id'], ['user_kyc_docs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('merchant_kyc_doc_comments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('merchant_kyc_doc_id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('commented_by', sa.Integer(), nullable=False),
    sa.Column('commented_by_role_id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['merchant_kyc_doc_id'], ['merchant_kyc_docs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment_gateway_transactions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('razorpay_payment_id', sa.String(length=500), nullable=True),
    sa.Column('razorpay_order_id', sa.String(length=500), nullable=True),
    sa.Column('razorpay_signature', sa.String(length=500), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('payment_gateway_status', sa.String(length=100), nullable=True),
    sa.Column('currency_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True, comment='If status == False payment not completed  if status==True Payment Completed'),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['currency_id'], ['md_currencies.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transactionrequests',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('shared_transaction_id', sa.String(length=55), nullable=True),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=True, comment='This amount is user want to send'),
    sa.Column('charges_amount', sa.Numeric(precision=10, scale=2), nullable=True, comment='This amount is all charges amount'),
    sa.Column('referenc_id', sa.String(length=50), nullable=True),
    sa.Column('http_request_data', sa.Text(), nullable=True),
    sa.Column('to_user_id', sa.Integer(), nullable=False),
    sa.Column('currency_id', sa.Integer(), nullable=True),
    sa.Column('from_user_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('status_updated_by', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['from_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['md_funds_request_status.id'], ),
    sa.ForeignKeyConstraint(['to_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_notificatuions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('status_category', sa.String(length=50), nullable=True),
    sa.Column('ref_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_notificatuions_user_id'), 'user_notificatuions', ['user_id'], unique=False)
    op.create_table('user_wallets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('currency_id', sa.Integer(), nullable=True),
    sa.Column('balance', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('credited_by', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['credited_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['md_currencies.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('admin_transactions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('shared_transaction_id', sa.String(length=55), nullable=True),
    sa.Column('transaction_type', sa.String(length=10), nullable=False, comment='CREDIT or DEBIT'),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=True, comment='This amount is user want to send'),
    sa.Column('charges_amount', sa.Numeric(precision=10, scale=2), nullable=True, comment='This amount is all charges amount'),
    sa.Column('ledger_amount', sa.Numeric(precision=10, scale=2), nullable=True, comment='This is converted exange amount. beneficiary will get this amount in to_currency'),
    sa.Column('referenc_id', sa.String(length=50), nullable=True),
    sa.Column('request_data', sa.Text(), nullable=True),
    sa.Column('payment_gateway_data', sa.Text(), nullable=True),
    sa.Column('payment_gateway_status', sa.Text(), nullable=True),
    sa.Column('track_id', sa.String(length=50), nullable=True),
    sa.Column('transaction_request_id', sa.Integer(), nullable=True),
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('credited_from_user_id', sa.Integer(), nullable=True),
    sa.Column('currency_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['admin.id'], ),
    sa.ForeignKeyConstraint(['credited_from_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['md_currencies.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['md_transaction_status.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.ForeignKeyConstraint(['transaction_request_id'], ['transactionrequests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_admin_transactions_tenant_id'), 'admin_transactions', ['tenant_id'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('shared_transaction_id', sa.String(length=55), nullable=True),
    sa.Column('transaction_type', sa.String(length=10), nullable=False, comment='CREDIT or DEBIT'),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=True, comment='This amount is user want to send'),
    sa.Column('charges_amount', sa.Numeric(precision=10, scale=2), nullable=True, comment='This amount is all charges amount'),
    sa.Column('ledger_amount', sa.Numeric(precision=10, scale=2), nullable=True, comment='This is converted exange amount. beneficiary will get this amount in to_currency'),
    sa.Column('referenc_id', sa.String(length=50), nullable=True),
    sa.Column('request_data', sa.Text(), nullable=True),
    sa.Column('payment_gateway_data', sa.Text(), nullable=True),
    sa.Column('payment_gateway_status', sa.Text(), nullable=True),
    sa.Column('track_id', sa.String(length=50), nullable=True),
    sa.Column('transaction_request_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('credited_from_user_id', sa.Integer(), nullable=True),
    sa.Column('currency_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['credited_from_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['md_currencies.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['md_transaction_status.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.ForeignKeyConstraint(['transaction_request_id'], ['transactionrequests.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transactions_tenant_id'), 'transactions', ['tenant_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_transactions_tenant_id'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_admin_transactions_tenant_id'), table_name='admin_transactions')
    op.drop_table('admin_transactions')
    op.drop_table('user_wallets')
    op.drop_index(op.f('ix_user_notificatuions_user_id'), table_name='user_notificatuions')
    op.drop_table('user_notificatuions')
    op.drop_table('transactionrequests')
    op.drop_table('payment_gateway_transactions')
    op.drop_table('merchant_kyc_doc_comments')
    op.drop_table('kyc_doc_comments')
    op.drop_index(op.f('ix_beneficiaries_user_id'), table_name='beneficiaries')
    op.drop_index(op.f('ix_beneficiaries_full_name'), table_name='beneficiaries')
    op.drop_index(op.f('ix_beneficiaries_city'), table_name='beneficiaries')
    op.drop_table('beneficiaries')
    op.drop_table('bank_accounts')
    op.drop_table('agent_kyc_doc_comments')
    op.drop_table('admin_wallets')
    op.drop_index(op.f('ix_admin_notificatuions_user_id'), table_name='admin_notificatuions')
    op.drop_index(op.f('ix_admin_notificatuions_admin_id'), table_name='admin_notificatuions')
    op.drop_table('admin_notificatuions')
    op.drop_index(op.f('ix_users_tenant_id'), table_name='users')
    op.drop_index(op.f('ix_users_location_id'), table_name='users')
    op.drop_table('users')
    op.drop_table('user_kyc_docs')
    op.drop_table('merchant_kyc_docs')
    op.drop_table('agent_kyc_docs')
    op.drop_table('remittance_charges')
    op.drop_index(op.f('ix_merchants_tenant_id'), table_name='merchants')
    op.drop_table('merchants')
    op.drop_index(op.f('ix_md_kyc_docs_tenant_id'), table_name='md_kyc_docs')
    op.drop_table('md_kyc_docs')
    op.drop_index(op.f('ix_md_currencies_currency_type_id'), table_name='md_currencies')
    op.drop_table('md_currencies')
    op.drop_table('kyc_detais')
    op.drop_index(op.f('ix_agents_tenant_id'), table_name='agents')
    op.drop_table('agents')
    op.drop_index(op.f('ix_admin_tenant_id'), table_name='admin')
    op.drop_table('admin')
    op.drop_table('transaction_sub_purpose')
    op.drop_table('transaction_purpose')
    op.drop_table('tokens')
    op.drop_index(op.f('ix_tickets_user_id'), table_name='tickets')
    op.drop_table('tickets')
    op.drop_table('tenants')
    op.drop_table('merchant_kyc_detais')
    op.drop_table('md_user_status')
    op.drop_index(op.f('ix_md_user_roles_name'), table_name='md_user_roles')
    op.drop_table('md_user_roles')
    op.drop_table('md_user_kyc_docs_status')
    op.drop_table('md_transaction_status')
    op.drop_table('md_timezones')
    op.drop_table('md_tenant_status')
    op.drop_table('md_task_status')
    op.drop_table('md_states')
    op.drop_table('md_service_types')
    op.drop_table('md_reminder_status')
    op.drop_table('md_otp_configarations')
    op.drop_table('md_occupations')
    op.drop_table('md_locations')
    op.drop_table('md_kyc_status')
    op.drop_table('md_kyc_docs_permissions')
    op.drop_table('md_funds_request_status')
    op.drop_table('md_currency_types')
    op.drop_table('md_countries')
    op.drop_table('md_charge_categoryes')
    op.drop_table('md_beneficiary_status')
    op.drop_table('md_beneficiary_categoryes')
    op.drop_table('coupons')
    op.drop_table('agent_kyc_detais')
    # ### end Alembic commands ###
